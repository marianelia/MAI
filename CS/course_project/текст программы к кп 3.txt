//вариант 10
//#include "stdafx.h"
#include <conio.h>
#include <stdio.h>
#include <math.h>

double machine_eps(){
double e = 1;
while(1+e/2 != 1){
e/=2;
}
return e;
}
const double pi = 3.1415926535979323846264338328;
const double eps = machine_eps();
const double delta = eps*1; // k = 1;
const double a = 0.0;
const double b = 1.0;

double function_sin2x(const double x){
double res = pow(sin(x),2);
return res;
}

double function_taylor_series(double x,int *i){
i = 0;
double pre_sum = 1, cur_sum = 0, series = 1;
double n = 1, sign = 1, b = 2, c = x*x, f = 2;
double factorial = 1;
while ((pre_sum - cur_sum > delta)||(pre_sum - cur_sum < -delta)){
pre_sum = cur_sum;
cur_sum += sign*c*b/f;
n += 1;
sign = -sign;
b*=4;
c *= x*x;
f*= (2*n)*(2*n-1);
(*i)+=1;
}
return cur_sum;
}
int comparison(double a, double b){
if((a - b < delta) &&( a - b > -delta)) return 0;
if(a-b<0) return -1;
return 1;
}

int main(){
int n, i = 0;
double result_taylor, result_function;
while(scanf_s("%d", &n) == 1){
if (n<=0){
continue;
}
double step = (b-a)/n;
printf("Epsilon = %e\n Delta = %e\n", eps, delta);
for (double x = a; comparison(x,b) <= 0; x+=step) {
result_function = function_sin2x(x);
result_taylor = function_taylor_series(x, &i);
printf("x = %.5lf", x);
printf(" f(x) = %7lf", result_function);
printf(" taylor(x) = %7lf", result_taylor);
printf(" i = %d",i);
printf(" %e\n", result_function -result_taylor);
}
}
//_getch();
return 0;
}